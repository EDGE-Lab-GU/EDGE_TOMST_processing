---
format: md
editor: visual
---

## Import TOMST logger data with R

Written by: Katrín Björnsdóttir, 19. march 2025

This tutorial goes through how you can import TOMST logger data and process the raw readings.

## What you need before importing the data into R:

Prepare your raw data according to these instructions.

1.  Packages:

    ```{r, warning = FALSE, message = FALSE}
    library(tidyverse)
    library(lubridate)
    library(data.table)
    ```

2.  Upload the raw data that you downloaded directly from the loggers to this folder: "Inputs/Raw_data/". For best results, each plot should have a separate folder and the folder should be named after the plot name (see how the test data is organized).

    ```{r}
    # List all raw data files
    f <- c(
      list.files("Inputs/Raw_data/", pattern = "data_", full.names = TRUE, recursive = TRUE)
    )

    # Prepare the data for importing
    fi <- data.frame(file = f)
    fi$file2 <- gsub("_..csv", "", fi$file)
    fi$plot_id <- sapply(fi$file, function(x) strsplit(x, "/")[[1]][3]) # extract plot_id from folder path
    fi <- fi[order(fi$plot_id), ]
    fi$tomst_id <- sapply(fi$file, function(x) as.numeric(strsplit(gsub("data_", "", strsplit(x, "/")[[1]][4]), "_")[[1]][1])) # extract tomst_id from file path
    ```

3.  Before importing the data from your TOMST loggers you will need a datatable with the following information:

    *plot_id:* Add the name or id of the specific plot the TOMST logger belongs to.

    *installation_date:* Add the date when the logger was installed in the field.

    *tomst_id:* Add the TOMST id number from the logger.

    You can use the template which you can access on the repository here: imput_tomst_setup

    Now load this datatable into R:

```{r}
tomst_setup <- read_csv("Inputs/Raw_data/input_tomst_setup.csv") |> 
  mutate(installation_date = as.Date(installation_date)) |>
  select(plot_id, installation_date) |>
  # Add one day because we don't know the exact time when the logger was set up. Easier to ignore the installation date completely.
  mutate(installation_date_new = installation_date + 1) |>
  filter(!is.na(installation_date))
```

# Import TOMST data

Use this function to load in all TOMST data into one datafile.

```{r}
# Read and clean data
readdata <- function(i) {
  files_to_read <- fi |> filter(grepl(i, fi$file))
  
  tomst_data <- data.table()
  for (ii in files_to_read$file) {
    print(ii)
    d <- fread(ii) |>
      select(V2, V3, V4, V5, V6, V7) |>
      filter(!duplicated(V2, fromLast = TRUE)) |>
      mutate(across(V4:V6, ~ as.numeric(gsub(",", ".", .)))) |>
      mutate(V2 = ymd_hm(V2, tz = "UTC")) |>
      mutate(V2 = with_tz(V2, tzone = "Europe/Stockholm"))
    
    
    d$plot_id <- fi$plot_id[which(fi$file == ii)][1]
    d$tomst_id <- fi$tomst_id[which(fi$file == ii)][1]
    
    # Combine with previous data
    tomst_data <- rbindlist(list(tomst_data, d), use.names = TRUE, fill = TRUE)
  }
  
  return(tomst_data)
}

# Apply the function
mylist <- lapply(fi$file, readdata)

tomst_data <- rbindlist(mylist, use.names = TRUE, fill = TRUE) |> 
# Clean up column names
  rename(datetime = V2, zone = V3, T1 = V4, T2 = V5, T3 = V6, moist = V7) |>
  arrange(plot_id, datetime) |> 
  # Match setup times and filter out data before setup
  left_join(tomst_setup, by = "plot_id") |> 
  filter(datetime > installation_date_new) |>
  select(-installation_date_new, installation_date)

```
